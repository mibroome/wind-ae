.. _installation:

Installation
============

Requirements
______________

**Wind-AE** requires the following packages and will pip install them automatically by following the Installation guide below.

- python >= 3.13.0
- numpy
- scipy
- astropy
- pandas >= 2.2.3
- matplotlib
- datetime
- pyarrow
- fastparquet
- requests
- ChiantiPy

Pip install
________________

To install the required packages using pip, run the following command:

.. code-block:: bash

    pip install wind_ae

You can test the install by running:

.. code-block:: bash

	python -c "import wind_ae"

Compile from source (development version)
_____________________________________________

Clone the repository using:

.. code-block:: bash

	git clone https://github.com/mibroome/wind-ae/ && cd wind_ae

or navigate to `github.com/mibroome/wind-ae/ <https://github.com/mibroome/wind-ae/>`_ and download and unzip the zip file.

Until **Wind-AE** is dockerized, it is recommended to use a Python environment to avoid dependency issues. 
However, if your system meets the above requirements, there is no need to create an environment and you can skip to the 
compilation step.

To create an environment use either:

.. code-block:: bash

	python3 -m venv venv_name.venv
	source venv_name.venv/bin/activate

or using conda:

.. code-block:: bash

	conda create -n venv_name
	conda activate venv_name
	conda install pip

To compile from the source:

.. code-block:: bash

    pip install --upgrade pip
    python3 -m pip install -e .

REMEMBER to make the C code before running Wind-AE for the first time:

.. code-block:: bash

	cd wind_ae/wind_ae/ && make

You can ignore any warnings that pop up.

You can test the install by running:

.. code-block:: bash

	python -c "import wind_ae"

Now you can run **Wind-AE** from anywhere! As seen in the tutorial, the following imports are helpful for most purposes:

.. code-block:: python

	from wind_ae.wrapper.relax_wrapper import wind_simulation as wind_sim
	from wind_ae.wrapper.wrapper_utils.plots import energy_plot, six_panel_plot, quick_plot
	from wind_ae.wrapper.wrapper_utils import constants as const
	from wind_ae.wrapper.wrapper_utils.system import system
	from wind_ae.wrapper.wrapper_utils.spectrum import spectrum

.. note::

    If you ever need to interface directly with the C code, it lives in ``wind_ae/src/`` and can be executed from 
    within the ``wind_ae/`` folder via ``./bin/relaxed_ae``. The solution generated will be for a planet with the 
    parameters detailed in the input files in the ``Inputs/`` folder. There is generally no need to interface with the 
    C code and most standard tasks can be accomplished by using the Python wrapper.

Future features and known problems
___________________________________

- Knudsen number calculations currently only contain H-H collisions.
- Converting spectrum ``kind`` from ``'full'`` to ``'mono'`` occasionally has issues.

Check out the `open issues <https://github.com/mabroome/wind-ae/issues>`_.
